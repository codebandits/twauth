---
jobs:

- name: api
  plan:
  - aggregate:
    - get: api-source
      trigger: true
    - get: api-version
      params: {bump: patch}
    - get: pipeline-tasks-source
  - task: test and build
    file: pipeline-tasks-source/pipeline/tasks/test-build-api.yml
  - put: api-artifact
    params:
      file: ./api-build/api-*.tgz
  - put: api-version
    params: {file: api-version/number}

- name: chat web
  plan:
  - aggregate:
    - get: chat-web-source
      trigger: true
    - get: chat-web-version
      params: {bump: patch}
    - get: pipeline-tasks-source
  - task: test and build
    file: pipeline-tasks-source/pipeline/tasks/test-build-chat-web.yml
  - put: chat-web-artifact
    params:
      file: ./chat-web-build/chat-web-*.tgz
  - put: chat-web-version
    params: {file: chat-web-version/number}

- name: chat backend
  plan:
  - aggregate:
    - get: chat-backend-source
      trigger: true
    - get: chat-backend-version
      params: {bump: patch}
    - get: pipeline-tasks-source
  - task: test and build
    file: pipeline-tasks-source/pipeline/tasks/test-build-chat-backend.yml
  - put: chat-backend-artifact
    params:
      file: ./chat-backend-build/chat-backend-*.tgz
  - put: chat-backend-version
    params: {file: chat-backend-version/number}

- name: e2e
  serial: true
  plan:
  - aggregate:
    - get: e2e-source
      trigger: true
    - get: api-artifact
      trigger: true
      passed: [api]
    - get: chat-web-artifact
      trigger: true
      passed:
      - chat web
    - get: chat-backend-artifact
      trigger: true
      passed:
      - chat backend
    - get: pipeline-tasks-source
  - aggregate:
    - task: extract api
      file: pipeline-tasks-source/pipeline/tasks/extract-api.yml
    - task: extract chat web
      file: pipeline-tasks-source/pipeline/tasks/extract-chat-web.yml
    - task: extract chat backend
      file: pipeline-tasks-source/pipeline/tasks/extract-chat-backend.yml
  - aggregate:
    - put: cf-ci
      params:
        manifest: api-artifact-extract/deployment/manifest-ci.yml
        environment_variables:
          TWITTER_CONSUMER-KEY: ((twitter.ci.consumer-key))
          TWITTER_CONSUMER-SECRET: ((twitter.ci.consumer-secret))
          TWITTER_ACCESS-TOKEN: ((twitter.ci.access-token))
          TWITTER_ACCESS-TOKEN-SECRET: ((twitter.ci.access-token-secret))
    - put: cf-ci
      params:
        manifest: chat-web-artifact-extract/deployment/manifest-ci.yml
    - put: cf-ci
      params:
        manifest: chat-backend-artifact-extract/deployment/manifest-ci.yml

  - task: end to end tests
    file: pipeline-tasks-source/pipeline/tasks/e2e.yml
    params:
      API_URL: http://twauth-api-ci.cfapps.io/
      CHAT_URL: http://twauth-chat-ci.cfapps.io/
      TWITTER_USERNAME: ((e2e.twitter_username))
      TWITTER_PASSWORD: ((e2e.twitter_password))
    privileged: true

- name: api production
  serial: true
  plan:
  - aggregate:
    - get: api-artifact
      trigger: true
      passed:
      - e2e
    - get: pipeline-tasks-source
  - task: extract api
    file: pipeline-tasks-source/pipeline/tasks/extract-api.yml
  - put: cf-production
    params:
      manifest: api-artifact-extract/deployment/manifest-production.yml
      environment_variables:
        TWITTER_CONSUMER-KEY: ((twitter.production.consumer-key))
        TWITTER_CONSUMER-SECRET: ((twitter.production.consumer-secret))
        TWITTER_ACCESS-TOKEN: ((twitter.production.access-token))
        TWITTER_ACCESS-TOKEN-SECRET: ((twitter.production.access-token-secret))

- name: chat web production
  serial: true
  plan:
  - aggregate:
    - get: chat-web-artifact
      trigger: true
      passed:
      - e2e
    - get: pipeline-tasks-source
  - task: extract chat web
    file: pipeline-tasks-source/pipeline/tasks/extract-chat-web.yml
  - put: cf-production
    params:
      manifest: chat-web-artifact-extract/deployment/manifest-production.yml

- name: chat backend production
  serial: true
  plan:
  - aggregate:
    - get: chat-backend-artifact
      trigger: true
      passed:
      - e2e
    - get: pipeline-tasks-source
  - task: extract chat backend
    file: pipeline-tasks-source/pipeline/tasks/extract-chat-backend.yml
  - put: cf-production
    params:
      manifest: chat-backend-artifact-extract/deployment/manifest-production.yml

resource_types:
- name: google-cloud-storage
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: api-version
  type: semver
  source:
    driver: gcs
    bucket: twauth-versions
    key: api-version
    json_key: ((gcp-credential))
- name: chat-web-version
  type: semver
  source:
    driver: gcs
    bucket: twauth-versions
    key: chat-web-version
    json_key: ((gcp-credential))
- name: chat-backend-version
  type: semver
  source:
    driver: gcs
    bucket: twauth-versions
    key: chat-backend-version
    json_key: ((gcp-credential))
- name: api-artifact
  type: google-cloud-storage
  source:
    bucket: twauth-artifacts
    json_key: ((gcp-credential))
    regexp: api-(.*).tgz
- name: chat-web-artifact
  type: google-cloud-storage
  source:
    bucket: twauth-artifacts
    json_key: ((gcp-credential))
    regexp: chat-web-(.*).tgz
- name: chat-backend-artifact
  type: google-cloud-storage
  source:
    bucket: twauth-artifacts
    json_key: ((gcp-credential))
    regexp: chat-backend-(.*).tgz
- name: api-source
  type: git
  source:
    uri: https://github.com/codebandits/twauth.git
    branch: master
    paths:
    - api
- name: chat-web-source
  type: git
  source:
    uri: https://github.com/codebandits/twauth.git
    branch: master
    paths:
    - chat/web
- name: chat-backend-source
  type: git
  source:
    uri: https://github.com/codebandits/twauth.git
    branch: master
    paths:
    - chat/backend
- name: e2e-source
  type: git
  source:
    uri: https://github.com/codebandits/twauth.git
    branch: master
    paths:
    - e2e
- name: pipeline-tasks-source
  type: git
  source:
    uri: https://github.com/codebandits/twauth.git
    branch: master
    paths:
    - pipeline/tasks
- name: cf-ci
  type: cf
  source:
    api: ((cf.api))
    username: ((cf.username))
    password: ((cf.password))
    organization: ((cf.organization))
    space: ci
- name: cf-production
  type: cf
  source:
    api: ((cf.api))
    username: ((cf.username))
    password: ((cf.password))
    organization: ((cf.organization))
    space: production

groups:
- name: pipeline
  jobs:
  - api
  - chat web
  - chat backend
  - e2e
  - api production
  - chat web production
  - chat backend production
